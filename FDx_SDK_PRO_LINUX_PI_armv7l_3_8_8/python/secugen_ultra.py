#!/usr/bin/env python3
import ctypes
import time
from pysgfplib import *

def main():
    print("üöÄ INICIO DEL SISTEMA SECUGEN PRO HUPx üöÄ")
    
    try:
        # 1. Carga manual de biblioteca
        lib = ctypes.CDLL('/usr/local/lib/libsgfplib.so', mode=ctypes.RTLD_GLOBAL)
        
        # 2. Inicializaci√≥n
        sgfplib = PYSGFPLib()
        print("‚úÖ Biblioteca cargada correctamente")
        
        # 3. Creaci√≥n de instancia
        if sgfplib.Create() != 0:
            raise RuntimeError("Error en Create()")
        
        # 4. Apertura especial del dispositivo
        print("üîå Conectando al dispositivo...")
        if sgfplib.OpenDevice(1) != 0:  # Usando puerto alternativo
            raise RuntimeError("Error en OpenDevice()")
        
        # 5. Inicializaci√≥n en modo Hamster Pro 20
        if sgfplib.Init(4) != 0:
            raise RuntimeError("Error en Init()")
        
        # 6. Prueba f√≠sica del LED
        print("\nüí° PRUEBA DEL LED - Debe encenderse ahora")
        sgfplib.SetLedOn(True)
        time.sleep(3)
        sgfplib.SetLedOn(False)
        
        # 7. Captura de huella
        print("\nüñêÔ∏è LISTO PARA CAPTURA - Coloque su dedo")
        width, height = 300, 400
        img_buffer = (ctypes.c_char * width * height)()
        
        if sgfplib.GetImage(img_buffer) == 0:
            with open('huella.raw', 'wb') as f:
                f.write(img_buffer)
            print("üéâ ¬°CAPTURA EXITOSA! Verifique huella.raw")
        else:
            print("‚ùå Fallo en captura - Revise conexi√≥n USB")
            
    except Exception as e:
        print(f"üí• ERROR: {str(e)}")
    finally:
        try:
            sgfplib.Terminate()
        except:
            pass

if __name__ == "__main__":
    main()
